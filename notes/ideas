change Symbolic to remove type families (e.g. Symbolic Rule instead of Symbolic (Rule f v))
take size of top term into account when ordering CPs
allow constraints between variables and constants

Use following idea from Bachmair:

  "For instance, suppose that all rewrite rules are numbered during
  completion in such a way that no two rules in any system Rn are
  assigned the same number. In addition, a rule is marked once all
  critical pairs with lower-numbered rules have been computed. Let P
  be a critical overlap s <- u -> t and supposed the rules numbered i,
  j, and k, respectively, are applied in the proof steps u -> s, u ->
  t and u -> v. If rule max(i, k) is marked, then all critical pairs
  between the corresponding rules have been computed, so that s and v
  are connected below u. Similarly, if rule max(j, k) is marked, then
  t and v are connected below u."

  As we eagerly add critical pairs, "rule max(i, k) is marked" means:
  rule i is the earlier rule of the two in the critical pair, and rule
  k is an earlier rule than the one from the critical pair. In particular,
  when we generate a critical pair, check that the top term can't be
  reduced by any earlier rule than the one we actually picked. (?)

Questions:
  Do we ever need to do split any more?
  (given that our constraints are always <=)
  Hopefully not, because we don't do it!

Check if subsumption checking is sound (applying rules backwards only if subterm)

Add "evil model" construction from before

Do narrowing

Implement unification indexing etc

Nice new term structure: Term = Flat FlatTerm | Subst Term Subst

Add proof production

Only consider general superpositions

Take age into account with critical pairs. Other ideas:
  * Number of CPs generated from same rule (the fewer the better)
  * Try each rule before going on to the next one
  * Reduce size if it matches goal term
    (subtract size of goal term from both sides?)

When doing connectedness testing, pick a ground (skolemised) instance
instead of a variable ordering - cheaper

Measure applicability of general superposition stuff by printing
superposed subterms

Change constraint stuff so we always have a total order
